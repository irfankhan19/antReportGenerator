<?xml version='1.0'?>
<project name="TranformXml" default="help"
	xmlns:sf="http://com.salesforce"
	basedir="."
>
	<!--
	Defines task extensions for additional functionality in the ant scripts
	antcontrib: provides additional logic and file handling capabilities
	salesforce: provides salesforce integration
	
	notice the URI matching the xmlns defined above
	-->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="lib/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>
	
	<taskdef resource="com/salesforce/sforce_ant.properties" uri="http://com.salesforce">
		<classpath>
			<pathelement location="lib/ant-salesforce.jar" />
		</classpath>
	</taskdef>
	
	<!-- setup the environment with the env prefix -->
	<property environment="env" />
	
	<!-- load the build properties from the build.environment file -->
	<property file="build.environment" />
	
	<!-- default values if not specified in the build.environment file -->
	<property name="object.report" value="objectReport.xsl" />
	<property name="profile.report" value="profileReport.xsl" />
	<property name="package.dir" value="package" />
	
	<property name="package.template" value="${package.dir}/package.template.xml" />
	<property name="package.filename" value="package.xml" />
	<property name="retrieve.dir" value="retrieved" />
	<property name="reports.dir" value="reports" />
	<property name="doc.dir" value="docs" />
	
	<property name="abort.stop" value="Unable to continue" />
	<property name="abort.user" value="Stopping due to user input" />
	
	<property name="package.path" value="${package.dir}/${package.filename}" />
	
	<!-- create the retrieve directory to load files into -->
	<mkdir dir="${retrieve.dir}" />
	
	<!-- assert the package file exists, otherwise tell them to be created -->
	<available file="${package.path}" type="file" property="package.found" />
	<if>
		<equals arg1="${package.found}" arg2="$${package.found}" />
		<then>
			<echo>
#	#	#	#	#	#	#
Package file was not found at: ${package.path}

Would you like to attempt to use the template?:</echo>

			<input
				addproperty="copyTemplate"
				validargs="y,n"
				defaultvalue="y"
			/>
			
			<if>
				<equals arg1="${copyTemplate}" arg2="y" />
				<then>
					<copy file="${package.template}" tofile="${package.path}" />
					
					<echo>

Success.
Copied ${package.template} to ${package.path}

Environment should be setup now</echo>
				</then>
				<else>
					<echo>
Please create a new package file at: ${package.path}</echo>
					<fail>${abort.user}</fail>
				</else>
			</if>
		</then>
	</if>
	
	<!-- determine if the objects have been retrieved -->
	<!-- to check if they exist, compare ${property} with $${property} -->
	<available file="${retrieve.dir}" type="dir" property="retrieve.found" />
	<available file="${retrieve.dir}/objects" type="dir" property="objects.found" />
	<available file="${retrieve.dir}/profiles" type="dir" property="profiles.found" />
	
	
	<!--
	#	#	#	#	#	#	#	#	#	
	Start of targets
	#	#	#	#	#	#	#	#	#
	-->
	
	<!-- HELP TARGETS -->
	
	<target name="help" description="Help">
		<echo>
#	#	#	#	#	#	#	#	#	#	#	#	#	#	
Basic ant project to print a retrieve to documentation
		
For general information or list of current properties:
	>ant
	or
	>ant help
	
To simply see the current settings, type
	>ant prop
	
To run a specific target
	$>ant [[TARGET]]
	
	such as
	$>ant help</echo>
		
		<antcall target="listTargets" inheritall="true" />
		<!-- <antcall target="prop" inheritall="true" /> -->
	</target>
	
	
	
	
	<target name="prop" description="Lists the current property values">
		<echo>
sf.username:  ${sf.username}
sf.serverurl: ${sf.serverurl}
		</echo>
	</target>
	
	
	
	
	<target name="listTargets" description="Lists the targets available">
		<echo>
High level targets
------------------
help      - lists help, along with the current properties and available targets to call
retrieve  - retrieves the objects specified in the package file
clean     - cleans all files retrieved and generated documentation
doc       - transforms the objects and profiles to documentation files


cleaning targets
----------------
cleanDocs      - Cleans all documentation generated
cleanRetrieved - Cleans all retrieved files
clean          - Cleans both documentation and retrieved files

documentation targets
---------------------
docObjects     - Runs documentation for all objects
docProfiles    - Runs documentation for all profiles
doc            - Runs documentation for everything

		</echo>
	</target>
	
	
	<!-- CLEAN TARGETS -->
	
	<target name="cleanDocs">
		<delete dir="${doc.dir}" />
	</target>
	<target name="cleanRetrieved">
		<delete dir="${retrieve.dir}" />
	</target>
	<target name="clean">
		<antcall target="cleanDocs" />
		<antcall target="cleanRetrieved" />
	</target>
	
	
	
	<!-- RETRIEVE TARGETS -->
	
	
	<target name="retrieve" description="Retrieves the objects specified in the package file">
		<echo>
Retriving Package now...</echo>
		
		<sf:retrieve username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}"
			retrieveTarget="${retrieve.dir}" unpackaged="${package.path}"
		/>
		<echo>
Done.

Files successfully retrieved to ${retrieve.dir}</echo>
	</target>
	
	
	<!-- CHECK TARGETS -->
	
	
	<!--
	/**
	 *  Checks if the objects have been retrieved
	 *  @VISIBILITY: INTERNAL
	 **/
	-->
	<target name="checkRetrieved" description="">
		<if>
			<equals arg1="${retrieve.found}" arg2="$${retrieve.found}" />
			<then>
				<echo>
No Files have been retrieved by
>ant retrieve
using ${package.path}</echo>
				<fail>${abort.stop}</fail>
			</then>
		</if>
	</target>
	
	
	<!--
	/**
	 *  Checks if the profiles have been retrieved
	 *  @VISIBILITY: INTERNAL
	 **/
	-->
	<target name="checkProfiles" depends="checkRetrieved" >
		<fail unless="${profiles.found}">
Profiles were not retrieved.

Please modify the package at: ${package.path}

Then call
>ant retrieve</fail>
	</target>
	
	
	<!--
	/**
	 *  Checks if the objects have been retrieved
	 *  @VISIBILITY: INTERNAL
	 **/
	-->
	<target name="checkObjects" depends="checkRetrieved" >
		<fail unless="${objects.found}">
Objects were not retrieved.

Please modify the package at: ${package.path}

Then call
>ant retrieve</fail>
	</target>
	
	
	
	<!-- DOCUMENTATION TARGETS -->
	
	
	<!--
	/**
	 * Documents the objects
	 **/
	-->
	<target name="docObjects" description="Run Documentation on objects" depends="checkProfiles,checkObjects" >
		<xslt basedir="." destdir="${doc.dir}"
			includes="${retrieve.dir}/objects/*.object"
			style="${reports.dir}/${object.report}"
		/>
		
		<echo>
Done.
Finished writing files out to ${doc.dir}</echo>
	</target>
	
	<!--
	/**
	 * Documents the profiles
	 **/
	-->
	<target name="docProfiles" description="Run Documentation on Profiles" depends="checkProfiles,checkObjects" >
		<xslt basedir="." destdir="${doc.dir}"
			includes="${retrieve.dir}/profiles/*.profile"
			style="${reports.dir}/${profile.report}"
		/>
		
		<echo>
Done.
Finished writing files out to ${doc.dir}</echo>
	</target>
	
	
	<!--
	/** 
     *  Documents everything
     **/
    -->
    <target name="doc" description="Runs documentation on everything" depends="cleanDocs,docObjects,docProfiles">
    </target>
</project>
